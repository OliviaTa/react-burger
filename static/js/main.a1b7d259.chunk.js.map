{"version":3,"sources":["components/orders/orders.module.css","components/burger-constructor/burger-constructor.module.css","components/modal-overlay/modal-overlay.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-ingredients/ingredients/ingredients-section/ingredients-section.module.css","components/burger-ingredients/ingredients/ingredients.module.css","components/burger-ingredients/tabs/tabs.module.css","components/modal/ingredient-details/ingredient-details-value.jsx/ingredient-details-value.module.css","pages/orders.module.css","components/app-header/nav-list/nav-list.module.css","components/app/app.module.css","services/hooks.ts","components/orders-stats/orders-stats.tsx","utils/index.ts","components/orders/order-card/order-status/order-status.tsx","components/orders/order-card/order-card.tsx","components/orders/orders.tsx","pages/feed.tsx","utils/cookie.ts","utils/api.ts","services/actions/auth.ts","pages/forgot-password.tsx","services/actions/burger-constructor.ts","components/burger-constructor/burger-components/burger-component/burger-component.tsx","components/burger-constructor/burger-components/burger-components.tsx","images/loading.svg","services/actions/order.ts","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/graphics.png","components/modal/order-details/order-details.tsx","components/burger-constructor/info/info.tsx","components/burger-constructor/burger-constructor.tsx","components/burger-ingredients/ingredients/ingredients-section/ingredient-item/ingredient-item.tsx","components/burger-ingredients/ingredients/ingredients-section/ingredients-section.tsx","components/burger-ingredients/ingredients/ingredients.tsx","components/burger-ingredients/tabs/tabs.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/home.tsx","components/modal/ingredient-details/ingredient-details-value.jsx/ingredient-details-value.tsx","components/modal/ingredient-details/ingredient-details.tsx","pages/ingredient-details.tsx","pages/login.tsx","components/order-info/order-info.tsx","pages/order-info.tsx","pages/orders.tsx","components/profile-nav/profile-nav.tsx","pages/profile.tsx","pages/register.tsx","pages/reset-password.tsx","services/actions/allOrders.ts","services/actions/userOrders.ts","components/app-header/nav-element/nav-element.tsx","components/app-header/nav-list/nav-list.tsx","components/app-header/profile-menu/profile-menu.tsx","components/app-header/app-header.tsx","components/protected-route.tsx","components/app/app.tsx","reportWebVitals.ts","services/middleware/socketMiddleware.ts","services/reducers/allOrders.ts","services/reducers/auth.ts","services/reducers/burger-constructor.ts","services/reducers/order.ts","services/reducers/userOrders.ts","services/reducers/app.ts","services/store.ts","index.tsx","components/orders/order-card/order-card.module.css","components/order-info/order-info.module.css","components/orders-stats/orders-stats.module.css","components/profile-nav/profile-nav.module.css","components/orders/order-card/order-status/order-status.module.css","components/burger-ingredients/ingredients/ingredients-section/ingredient-item/ingredient-item.module.css","pages/profile.module.css","components/modal/order-details/order-details.module.css","components/burger-constructor/info/info.module.css","pages/home.module.css","components/modal/modal.module.css","components/modal/ingredient-details/ingredient-details.module.css","pages/order-info.module.css","components/app-header/app-header.module.css","components/app-header/nav-element/nav-element.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","OrdersStats","store","allOrders","ordersData","orders","total","totalToday","readyOrders","filter","order","status","map","number","progressOrders","className","styles","ordersStats","ordersBoard","done","ready","ordersList","completedNumber","getFormattedDate","createdAt","date","Date","day","isToday","isYesterday","formatDistance","locale","ruLocale","format","getTotalCost","ingredients","item","reduce","acc","type","price","getOrdersIngredients","id","_id","OrderStatus","pending","created","canceled","OrderCard","showStatus","location","useLocation","history","useHistory","formattedDate","useMemo","addIngredient","length","i","push","count","card","onClick","pathname","background","orderNumber","header","timestamp","name","content","images","image","src","alt","ingredientsCount","reverse","ingredient","index","Orders","state","burgerConstructor","orderList","FeedPage","container","main","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","Boolean","GET_USER_URL","checkResponse","res","ok","json","then","err","Promise","reject","fetchRequest","url","options","a","fetch","refreshToken","method","headers","body","JSON","stringify","token","localStorage","getItem","fetchWithRefresh","message","refreshData","setItem","accessToken","split","Headers","append","getIngredientsRequest","getOrderData","ingredientsIdList","recoveryPassword","form","resetPassword","signUpRequest","signInRequest","signOutRequest","getUserRequest","user","updateUserRequest","updatedUser","SET_USER","CLEAR_USER","SET_SIGNIN_SUCCESS","signOut","dispatch","getUser","ForgotPasswordPage","useState","email","setForm","auth","useEffect","recovery","useCallback","e","preventDefault","success","from","to","wrapper","onSubmit","heading","placeholder","size","onChange","target","actions","link","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_CONSTRUCTOR_INGREDIENT","REMOVE_CONSTRUCTOR_INGREDIENT","CLEAR_CONSTRUCTOR","CHANGE_CONSTRUCTOR_INGREDIENT_POSITION","BurgerComponent","useDrag","originalIndex","collect","monitor","isDragging","end","didDrop","drag","useDrop","accept","canDrop","hover","draggedItem","uid","drop","opacity","ref","node","style","text","thumbnail","handleClose","BurgerComponents","constructorIngredients","bun","isLocked","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","ModalOverlay","children","modalOverlay","event","currentTarget","Modal","headerClassName","onClose","React","closeOnEscKeyDown","key","addEventListener","removeEventListener","ReactDOM","createPortal","modal","getElementById","OrderDetails","orderDetails","checkMarkIconPath","width","height","textColor","Info","orderRequestSuccess","orderRequest","isModalOpen","setIsModalOpen","totalPrice","list","info","disabledButton","ingredientsId","catch","console","log","loading","BurgerConstructor","dropTarget","IngredientItem","dragRef","IngredientsSection","title","items","Ingredients","tabs","onScroll","burgersData","burgersDataWithCount","burgerIngredients","elem","Tabs","data","activeTab","active","BurgerIngredients","setActiveTab","tab","element","scrollIntoView","behavior","targetTop","getBoundingClientRect","top","sections","Array","querySelectorAll","section","Math","abs","sort","b","HomePage","DndProvider","backend","HTML5Backend","IngredientDetailsValue","IngredientDetails","useParams","ingredientsRequest","ingredientsFailed","filteredIngredient","setTimeout","ingredientDetails","image_large","nutritions","calories","proteins","fat","carbohydrates","IngredientDetailsPage","LoginPage","password","isPasswordVisible","setPasswordVisible","signInSuccess","indexOf","signIn","icon","onIconClick","error","errorText","OrderInfo","userOrders","userOrdersData","includes","filteredOrders","ingredientsWithCount","findIndex","footer","OrderInfoPage","OrdersPage","ProfileNav","navLinks","path","caption","activeLink","nav","ProfilePage","disabled","initialForm","setInitialForm","formKeys","Object","keys","updatedForm","targetName","exact","querySelector","focus","blur","cancel","RegistertPage","signUp","ResetPasswordPage","reset","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_USER_ORDERS_CONNECTION_START","WS_USER_ORDERS_CONNECTION_SUCCESS","WS_USER_ORDERS_CONNECTION_ERROR","WS_USER_ORDERS_CONNECTION_CLOSED","WS_USER_ORDERS_GET_MESSAGE","NavElement","isActive","onLinkClick","NavList","setActiveLink","menu","BurgerIcon","ListIcon","navList","Icon","ProfileMenu","AppHeader","appHeader","ProtectedRoute","rest","render","App","action","wsConnected","modalOrderInfo","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","socketMiddleware","wsUrl","wsActions","provideToken","socket","next","getState","wsInit","onOpen","onError","onMessage","params","WebSocket","onopen","payload","onerror","onmessage","parsedData","parse","restParsedData","onclose","initialState","rootReducer","combineReducers","changedIngredients","uuidv4","splice","wsUserOrdersActions","enhancer","window","compose","applyMiddleware","thunk","createStore","initStore","StrictMode","basename"],"mappings":"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","file":"static/js/main.a1b7d259.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"orders_orderList__2ASvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-constructor_wrapper__3y1z5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__tfXD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-ingredients_wrapper__4IsT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients-section_ingredients__3Ff4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients_ingredients__BIdYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__1oUdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"ingredient-details-value_value__3Frcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"orders_orders__3xbma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navList\":\"nav-list_navList__1L87A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\"};","import { TypedUseSelectorHook, useDispatch as dispatchHook, useSelector as selectorHook } from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from './types';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import { FC } from 'react';\nimport { useSelector } from '../../services/hooks';\nimport styles from './orders-stats.module.css';\n\nconst OrdersStats: FC = () => {\n    const { orders, total, totalToday } = useSelector(store => store.allOrders?.ordersData || { orders: [], total: 0, totalToday: 0 });\n\n    const readyOrders = orders\n        ? orders\n            .filter(order => order.status === 'done')\n            .map(order => order.number)\n        : [];\n    const progressOrders = orders\n        ? orders\n            .filter(order => order.status === 'pending')\n            .map(order => order.number)\n        : [];\n\n    return (\n        <section className={styles.ordersStats}>\n            <div className={`${styles.ordersBoard} mb-15`}>\n                <div className={styles.done}>\n                    <h2 className='text text_type_main-medium mb-6'>Готовы:</h2>\n                    <ul className={`${styles.ready} ${styles.ordersList}`}>\n                        {readyOrders.map(order => <li className='text text_type_digits-default' key={order}>{order}</li>)}\n                    </ul>\n                </div>\n                <div>\n                    <h2 className='text text_type_main-medium mb-6'>В работе:</h2>\n                    <ul className={styles.ordersList}>\n                        {progressOrders.map(order => <li className='text text_type_digits-default' key={order}>{order}</li>)}\n                    </ul>\n                </div>\n            </div>\n            <div className='mb-15'>\n                <h2 className='text text_type_main-medium'>Выполнено за все время:</h2>\n                <div className={`${styles.completedNumber} text text_type_digits-large`}>{total}</div>\n            </div>\n            <div>\n                <h2 className='text text_type_main-medium'>Выполнено за сегодня:</h2>\n                <div className={`${styles.completedNumber} text text_type_digits-large`}>{totalToday}</div>\n            </div>\n        </section>\n    );\n};\n\nexport default OrdersStats;","import { TOrderItem, TBurgerConstructorItem } from './../types/app.types';\nimport { format, formatDistance, isToday, isYesterday } from \"date-fns\";\nimport ruLocale from \"date-fns/locale/ru\";\n\nexport const getFormattedDate = (createdAt: string) => {\n    const date = new Date(createdAt);\n    const day = isToday(date)\n        ? 'Сегодня'\n        : isYesterday(date)\n            ? 'Вчера'\n            : `${formatDistance(date, new Date(), { locale: ruLocale })} назад`;\n    return `${day}, ${format(date, 'HH:mm')} i-${format(date, 'z')}`;\n};\n\nexport const getTotalCost = (ingredients: TBurgerConstructorItem[]) => {\n    return ingredients\n        .filter(item => item)\n        .reduce((acc, item) => item.type === 'bun' ? (acc + item.price * 2) : (acc + item.price), 0);\n};\n\nexport const getOrdersIngredients = (orders: TOrderItem[], ingredients: TBurgerConstructorItem[]) => {\n    return orders.map(order => ({\n        ...order,\n        ingredients: order.ingredients.map(id => ingredients.filter(item => item._id === id)[0])\n    }));\n};","import { FC } from 'react';\nimport styles from './order-status.module.css';\n\ninterface IOrderStatusProps {\n    status: string;\n};\n\nconst OrderStatus: FC<IOrderStatusProps> = ({ status }) => {\n    switch (status) {\n        case 'done':\n            return <div className={`${styles.done} mt-2`}>Выполнен</div>;\n        case 'pending':\n            return <div className={`${styles.pending} mt-2`}>Готовится</div>;\n        case 'created':\n            return <div className={`${styles.created} mt-2`}>Создан</div>;\n        case 'canceled':\n            return <div className={`${styles.canceled} mt-2`}>Отменен</div>;\n        default:\n            return null;\n    }\n};\n\nexport default OrderStatus;","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { TBurgerConstructorItem, TOrderItem } from '../../../types/app.types';\nimport { getFormattedDate, getTotalCost } from '../../../utils';\nimport styles from './order-card.module.css';\nimport OrderStatus from './order-status/order-status';\n\ninterface IOrderCard {\n    order: TOrderItem<TBurgerConstructorItem>;\n    showStatus: boolean;\n};\n\nconst OrderCard: FC<IOrderCard> = ({ order, showStatus }) => {\n    const location = useLocation();\n    const history = useHistory();\n\n    const formattedDate = useMemo<string>(() => getFormattedDate(order.createdAt), [order]);\n\n    let ingredients = [];\n    let addIngredient = null;\n\n    if (order.ingredients.length > 5) {\n        for (let i = 0; i < 5; i++) {\n            ingredients.push(order.ingredients[i]);\n        }\n        addIngredient = { ...order.ingredients[5], count: order.ingredients.length - 5 };\n    } else {\n        ingredients = [...order.ingredients];\n    }\n\n    const onOrderClick = () => {\n        history.push(`${location.pathname}/${order._id}`, { background: location, orderNumber: order.number });\n    };\n\n    return (\n        <div className={`${styles.card} p-6`} onClick={onOrderClick}>\n            <div className={`${styles.header} mb-6`}>\n                <div className=\"text text_type_digits-default\">{`#${order.number}`}</div>\n                <div className={styles.timestamp}>{formattedDate}</div>\n            </div>\n            <div className='text text_type_main-medium'>{order.name}</div>\n            {showStatus && <OrderStatus status={order.status} />}\n            <div className={`${styles.content} mt-6`}>\n                <div className={styles.images}>\n                    {addIngredient && (\n                        <div className={styles.addIngredient}>\n                            <img className={styles.image} src={addIngredient.image} alt='ingredient' />\n                            <div className={styles.ingredientsCount}>{`+${addIngredient.count}`}</div>\n                        </div>\n                    )}\n                    {ingredients.reverse().map((ingredient, index) => {\n                        return typeof ingredient === 'object'\n                            ? <img className={styles.image} key={index} src={ingredient.image} alt='ingredient' />\n                            : null;\n                    }\n                    )}\n                </div>\n                <div className={styles.price}>\n                    <div className='text text_type_digits-default mr-2'>{getTotalCost(order.ingredients)}</div>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderCard;","import { FC, useMemo } from \"react\";\nimport { useSelector } from \"../../services/hooks\";\nimport { TBurgerConstructorItem, TOrderItem } from '../../types/app.types';\nimport { getOrdersIngredients } from \"../../utils\";\nimport OrderCard from \"./order-card/order-card\";\nimport styles from './orders.module.css';\n\ninterface IOrdersProps {\n    orders: Array<TOrderItem>;\n    showStatus?: boolean;\n};\n\nconst Orders: FC<IOrdersProps> = ({ orders, showStatus = false }) => {\n    const ingredients = useSelector(state => state.burgerConstructor.ingredients);\n    const ordersList = useMemo<Array<TOrderItem<TBurgerConstructorItem>>>(() => getOrdersIngredients(orders, ingredients), [orders, ingredients]);\n\n    return (\n        <>\n            <div className={styles.orderList}>\n                {ordersList.map(order => {\n                    return order\n                        ? <OrderCard key={order._id} order={order} showStatus={showStatus} />\n                        : null;\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default Orders;","import { FC } from \"react\";\nimport OrdersStats from \"../components/orders-stats/orders-stats\";\nimport Orders from \"../components/orders/orders\";\nimport { useSelector } from \"../services/hooks\";\nimport styles from './home.module.css';\n\nexport const FeedPage: FC = () => {\n    const orders = useSelector(state => state.allOrders.ordersData?.orders || []);\n\n    return (\n        <>\n            <h1 className={`${styles.container} text text_type_main-large mb-5 mt-10`}>Лента заказов</h1>\n            <main className={styles.main}>\n                <section className={styles.orders}>\n                    <Orders orders={orders} />\n                </section>\n                <OrdersStats />\n            </main>\n        </>\n    );\n};","export function getCookie(name: string) {\n    const matches = document.cookie.match(\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\n    );\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\ntype TSetCookieProps = {\n    expires?: number | Date | string\n};\n\nexport function setCookie(name: string, value: string, props: TSetCookieProps = {}) {\n    let exp = props.expires;\n\n    if (typeof exp == 'number' && exp) {\n        const d = new Date();\n        d.setTime(d.getTime() + exp * 1000);\n        exp = props.expires = d;\n    }\n\n    if (exp instanceof Date && exp.toUTCString) {\n        props.expires = exp.toUTCString();\n    }\n\n    value = encodeURIComponent(value);\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n        updatedCookie += '; ' + propName;\n        const propValue = props[propName as keyof TSetCookieProps];\n\n        if (Boolean(propValue) !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n    document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name: string) {\n    setCookie(name, '', { expires: -1 });\n}","import { TProfileForm } from './../pages/profile';\nimport { ILoginForm } from './../pages/login';\nimport { IRegisterForm } from './../pages/register';\nimport { IResetPasswordForm } from '../pages/reset-password';\nimport { IForgotPasswordForm } from './../pages/forgot-password';\nimport { getCookie, setCookie } from \"./cookie\";\n\nconst INGREDIENTS_URL = 'https://norma.nomoreparties.space/api/ingredients';\nconst ORDER_URL = 'https://norma.nomoreparties.space/api/orders';\nconst SEND_CODE_RESET_URL = 'https://norma.nomoreparties.space/api/password-reset';\nconst PASSWORD_RESET_URL = 'https://norma.nomoreparties.space/api/password-reset/reset';\nconst REGISTER_URL = 'https://norma.nomoreparties.space/api/auth/register';\nconst LOGIN_URL = 'https://norma.nomoreparties.space/api/auth/login';\nconst LOGOUT_URL = 'https://norma.nomoreparties.space/api/auth/logout';\nconst REFRESH_TOKEN_URL = 'https://norma.nomoreparties.space/api/auth/token';\nconst GET_USER_URL = 'https://norma.nomoreparties.space/api/auth/user';\n\nconst checkResponse = (res: Response) => {\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\n};\n\nconst fetchRequest = async (url: string, options?: RequestInit) => {\n    try {\n        const res = await fetch(url, options);\n        return await checkResponse(res);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nconst refreshToken = () => {\n    return fetch(REFRESH_TOKEN_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            token: localStorage.getItem('refreshToken')\n        })\n    })\n        .then(checkResponse);\n};\n\nconst fetchWithRefresh = async (url: string, options: RequestInit = {}) => {\n    if (!options.headers) {\n        options.headers = {};\n    }\n\n    try {\n        const res = await fetch(url, options);\n\n        return await checkResponse(res);\n    } catch (err) {\n        if (err.message === 'jwt expired') {\n            const refreshData = await refreshToken();\n            localStorage.setItem('refreshToken', refreshData.refreshToken);\n            setCookie('accessToken', refreshData.accessToken.split('Bearer ')[1], { expires: 20 * 60 });\n\n            const header = new Headers(options.headers);\n            header.append('athorization', refreshData.accessToken);\n            options.headers = header;\n\n            const res = await fetch(url, options);\n            return await checkResponse(res);\n        } else {\n            return Promise.reject(err);\n        }\n    }\n};\n\nexport const getIngredientsRequest = async () => {\n    return await fetchRequest(INGREDIENTS_URL);\n};\n\nexport const getOrderData = async (ingredientsIdList: string[]) => {\n    return await fetchWithRefresh(ORDER_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + getCookie('accessToken')\n        },\n        body: JSON.stringify({\n            ingredients: ingredientsIdList\n        })\n    });\n};\n\nexport const recoveryPassword = async (form: IForgotPasswordForm) => {\n    return await fetchRequest(SEND_CODE_RESET_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n    });\n};\n\nexport const resetPassword = async (form: IResetPasswordForm) => {\n    return await fetchRequest(PASSWORD_RESET_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n    });\n};\n\nexport const signUpRequest = async (form: IRegisterForm) => {\n    return await fetchRequest(REGISTER_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n    });\n};\n\nexport const signInRequest = async (form: ILoginForm) => {\n    return await fetchRequest(LOGIN_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n    });\n};\n\nexport const signOutRequest = async () => {\n    return await fetchRequest(LOGOUT_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            token: localStorage.getItem('refreshToken')\n        })\n    });\n};\n\nexport const getUserRequest = async () => {\n    const accessToken = getCookie('accessToken');\n    if (!accessToken) {\n        return { user: null };\n    }\n\n    return await fetchWithRefresh(GET_USER_URL, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + accessToken\n        }\n    });\n};\n\nexport const updateUserRequest = async (updatedUser: TProfileForm<string>) => {\n    return await fetchWithRefresh(GET_USER_URL, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + getCookie('accessToken')\n        },\n        body: JSON.stringify(updatedUser)\n    });\n}","import { ILoginForm } from './../../pages/login';\nimport { IRegisterForm } from './../../pages/register';\nimport { AppThunk, AppDispatch } from './../types/index';\nimport { TUser } from './../../types/state.types';\nimport { getUserRequest, signInRequest, signOutRequest, signUpRequest, updateUserRequest } from \"../../utils/api\";\nimport { deleteCookie, setCookie } from \"../../utils/cookie\";\n\nexport const SET_USER: 'SET_USER' = 'SET_USER';\nexport const CLEAR_USER: 'CLEAR_USER' = 'CLEAR_USER';\nexport const SET_SIGNIN_SUCCESS: 'SET_SIGNIN_SUCCESS' = 'SET_SIGNIN_SUCCESS';\n\nexport interface ISetUserAction {\n    readonly type: typeof SET_USER;\n    readonly user: TUser;\n};\n\nexport interface IClearUserAction {\n    readonly type: typeof CLEAR_USER;\n};\n\nexport interface ISetSigninSuccessAction {\n    readonly type: typeof SET_SIGNIN_SUCCESS;\n    readonly success: boolean;\n};\n\nexport type TAuthActions = ISetUserAction\n    | IClearUserAction\n    | ISetSigninSuccessAction;\n\nexport const signUp: AppThunk = (form: IRegisterForm) => (dispatch: AppDispatch) => {\n    signUpRequest(form)\n        .then(res => {\n            if (res.accessToken && res.accessToken.indexOf('Bearer') === 0) {\n                localStorage.setItem('refreshToken', res.refreshToken);\n                setCookie('accessToken', res.accessToken.split('Bearer ')[1]);\n            }\n            dispatch({\n                type: SET_USER,\n                user: res.user\n            });\n        })\n}\n\nexport const signIn: AppThunk = (form: ILoginForm) => (dispatch: AppDispatch) => {\n    signInRequest(form)\n        .then(res => {\n            if (res.accessToken && res.accessToken.indexOf('Bearer') === 0) {\n                localStorage.setItem('refreshToken', res.refreshToken);\n                setCookie('accessToken', res.accessToken.split('Bearer ')[1]);\n            }\n            dispatch({\n                type: SET_USER,\n                user: res.user\n            });\n            dispatch({\n                type: SET_SIGNIN_SUCCESS,\n                success: true\n            });\n        })\n        .catch(err => {\n            if (err.message === 'email or password are incorrect') {\n                dispatch({\n                    type: SET_SIGNIN_SUCCESS,\n                    success: false\n                });\n            }\n        });\n}\n\nexport const signOut: AppThunk = () => (dispatch: AppDispatch) => {\n    signOutRequest()\n        .then(res => {\n            dispatch({\n                type: CLEAR_USER\n            });\n            deleteCookie('accessToken');\n        })\n}\n\nexport const getUser: AppThunk = () => (dispatch: AppDispatch) => {\n    getUserRequest()\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                user: res.user\n            });\n        });\n}\n\nexport const updateUser: AppThunk = (updatedUser) => (dispatch: AppDispatch) => {\n    updateUserRequest(updatedUser)\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                user: res.user\n            });\n        });\n}","import { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { getUser } from '../services/actions/auth';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { recoveryPassword } from '../utils/api';\nimport styles from './home.module.css';\n\nexport interface IForgotPasswordForm {\n    email: string;\n};\n\nexport const ForgotPasswordPage: FC = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [form, setForm] = useState<IForgotPasswordForm>({ email: '' });\n    const user = useSelector(state => state.auth.user);\n\n    useEffect(() => {\n        dispatch(getUser());\n    }, [dispatch]);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const recovery = useCallback(e => {\n        e.preventDefault();\n        recoveryPassword(form)\n            .then(res => {\n                if (res.success) {\n                    history.replace({\n                        pathname: '/reset-password',\n                        state: {\n                            from: '/forgot-password'\n                        }\n                    });\n                }\n            });\n    }, [form, history]);\n\n    if (user) {\n        return (\n            <Redirect\n                to='/'\n            />\n        );\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <form onSubmit={recovery} className={`${styles.form} mb-20`}>\n                <h1 className={styles.heading}>Восстановление пароля</h1>\n                <Input\n                    type='email'\n                    placeholder='Укажите e-mail'\n                    value={form.email}\n                    name='email'\n                    size='default'\n                    onChange={onChange}\n                />\n                <Button type=\"primary\" size=\"medium\">Восстановить</Button>\n            </form>\n            <div className={styles.actions}>\n                <p>Вспомнили пароль? <Link className={styles.link} to='/login'>Войти</Link></p>\n            </div>\n        </div>\n    );\n}","import { AppDispatch, AppThunk } from './../types/index';\nimport { TBurgerConstructorItem } from './../../types/app.types';\nimport { getIngredientsRequest } from '../../utils/api';\n\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\nexport const ADD_CONSTRUCTOR_INGREDIENT: 'ADD_CONSTRUCTOR_INGREDIENT' = 'ADD_CONSTRUCTOR_INGREDIENT';\nexport const REMOVE_CONSTRUCTOR_INGREDIENT: 'REMOVE_CONSTRUCTOR_INGREDIENT' = 'REMOVE_CONSTRUCTOR_INGREDIENT';\nexport const CLEAR_CONSTRUCTOR: 'CLEAR_CONSTRUCTOR' = 'CLEAR_CONSTRUCTOR';\nexport const CHANGE_CONSTRUCTOR_INGREDIENT_POSITION: 'CHANGE_CONSTRUCTOR_INGREDIENT_POSITION' = 'CHANGE_CONSTRUCTOR_INGREDIENT_POSITION';\n\nexport interface IGetIngredientsRequestAction {\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\n};\n\nexport interface IGetIngredientsSuccessAction {\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\n    readonly items: Array<TBurgerConstructorItem>;\n};\n\nexport interface IGetIngredientsFailedAction {\n    readonly type: typeof GET_INGREDIENTS_FAILED;\n};\n\nexport interface IAddConstructorIngredientAction {\n    readonly type: typeof ADD_CONSTRUCTOR_INGREDIENT;\n    readonly item: TBurgerConstructorItem;\n};\n\nexport interface IRemoveConstructorIngredientAction {\n    readonly type: typeof REMOVE_CONSTRUCTOR_INGREDIENT;\n    readonly index: number;\n};\n\nexport interface IClearConstructorAction {\n    readonly type: typeof CLEAR_CONSTRUCTOR;\n};\n\nexport interface IChangeConstructorIngredientPositionAction {\n    readonly type: typeof CHANGE_CONSTRUCTOR_INGREDIENT_POSITION;\n    readonly item: TBurgerConstructorItem;\n    readonly index: number;\n};\n\nexport type TBurgerConstructorActions = IGetIngredientsRequestAction\n    | IGetIngredientsSuccessAction\n    | IGetIngredientsFailedAction\n    | IAddConstructorIngredientAction\n    | IRemoveConstructorIngredientAction\n    | IClearConstructorAction\n    | IChangeConstructorIngredientPositionAction;\n\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\n    dispatch({\n        type: GET_INGREDIENTS_REQUEST\n    });\n    getIngredientsRequest()\n        .then(res => {\n            dispatch({\n                type: GET_INGREDIENTS_SUCCESS,\n                items: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_INGREDIENTS_FAILED\n            })\n        });\n}","import { ConstructorElement, DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { FC } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { useDispatch } from \"../../../../services/hooks\";\nimport { CHANGE_CONSTRUCTOR_INGREDIENT_POSITION, REMOVE_CONSTRUCTOR_INGREDIENT } from \"../../../../services/actions/burger-constructor\";\nimport { TBurgerConstructorItem } from \"../../../../types/app.types\";\n\ninterface IBurgerComponentProps {\n    item: TBurgerConstructorItem,\n    index: number\n};\n\ntype TDragObject = {\n    item: TBurgerConstructorItem\n};\n\nconst BurgerComponent: FC<IBurgerComponentProps> = ({ item, index }) => {\n    const dispatch = useDispatch();\n\n    const [{ isDragging }, drag] = useDrag({\n        type: 'newPosition',\n        item: { item, originalIndex: index },\n        collect: monitor => ({ isDragging: monitor.isDragging() }),\n        end: (item, monitor) => {\n            if (!monitor.didDrop()) {\n                dispatch({\n                    type: CHANGE_CONSTRUCTOR_INGREDIENT_POSITION,\n                    item: item.item,\n                    index: item.originalIndex\n                })\n            }\n        }\n    });\n\n    const [, drop] = useDrop({\n        accept: 'newPosition',\n        canDrop: () => false,\n        hover: ({ item: draggedItem }: TDragObject) => {\n            if (draggedItem.uid !== item.uid) {\n                dispatch({\n                    type: CHANGE_CONSTRUCTOR_INGREDIENT_POSITION,\n                    item: draggedItem,\n                    index: index\n                })\n            }\n        }\n    });\n\n    const deleteItem = () => {\n        dispatch({\n            type: REMOVE_CONSTRUCTOR_INGREDIENT,\n            index\n        });\n    };\n\n    const opacity = isDragging ? 0 : 1;\n    return (\n        <div\n            ref={(node) => drag(drop(node))}\n            className='burger_component mb-4'\n            style={{ opacity }}\n        >\n            <div className='drag_icon'>\n                <DragIcon type=\"primary\" />\n            </div>\n            <ConstructorElement\n                text={item.name}\n                thumbnail={item.image}\n                price={item.price}\n                handleClose={deleteItem}\n            />\n        </div>\n    );\n};\n\nexport default BurgerComponent;","import { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC } from 'react';\nimport { useDrop } from \"react-dnd\";\nimport { useSelector } from \"../../../services/hooks\";\nimport BurgerComponent from \"./burger-component/burger-component\";\nimport \"./burger-components.css\";\n\n\nconst BurgerComponents: FC = () => {\n    const { bun, ingredients } = useSelector(state => state.burgerConstructor.constructorIngredients);\n    const [, drop] = useDrop({\n        accept: 'newPosition'\n    });\n\n    return (\n        <div className='ingredients mb-10'>\n            {bun && <div className='mb-4'>\n                <ConstructorElement\n                    type=\"top\"\n                    isLocked={true}\n                    text={`${bun.name} (верх)`}\n                    thumbnail={bun.image}\n                    price={bun.price}\n                />\n            </div>}\n            <div ref={drop} className='scrolled-elements'>\n                {ingredients.map((item, index) => <BurgerComponent key={item.uid} item={item} index={index} />)}\n            </div>\n            {bun && <div className='bottom-bun pt-4'>\n                <ConstructorElement\n                    type=\"bottom\"\n                    isLocked={true}\n                    text={`${bun.name} (низ)`}\n                    thumbnail={bun.image}\n                    price={bun.price}\n                />\n            </div>}\n        </div>\n    );\n}\n\nexport default BurgerComponents;","export default __webpack_public_path__ + \"static/media/loading.acec6d67.svg\";","import { TOrderItem } from './../../types/app.types';\nimport { getOrderData } from \"../../utils/api\";\nimport { AppDispatch, AppThunk } from '../types';\nimport { TOrderInfo } from './../../types/state.types';\nimport { CLEAR_CONSTRUCTOR } from \"./burger-constructor\";\n\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\n\nexport interface IGetOrderRequestAction {\n    readonly type: typeof GET_ORDER_REQUEST;\n};\n\nexport interface IGetOrderSuccessAction {\n    readonly type: typeof GET_ORDER_SUCCESS;\n    readonly order: TOrderInfo;\n};\n\nexport type TOrderActions = IGetOrderRequestAction | IGetOrderSuccessAction;\n\nexport const getOrder: AppThunk = (ingredientsId: string[]) => (dispatch: AppDispatch) => {\n    dispatch({ type: GET_ORDER_REQUEST });\n    getOrderData(ingredientsId)\n        .then(res => {\n            const order: TOrderInfo = res.order;\n            if (order?.ingredients) {\n                order.ingredients = order.ingredients.filter(item => item);\n            }\n\n            dispatch({\n                type: GET_ORDER_SUCCESS,\n                order\n            });\n            dispatch({ type: CLEAR_CONSTRUCTOR });\n        })\n        .catch(err => console.log(err));\n}","import { FC } from 'react';\nimport styles from './modal-overlay.module.css';\n\ninterface IModalOverlayProps {\n    onClick: () => void;\n};\n\nconst ModalOverlay: FC<IModalOverlayProps> = ({ onClick, children }) => {\n    const onOverlayClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (event.target === event.currentTarget) onClick();\n    }\n\n    return (\n        <div className={styles.modalOverlay} onClick={onOverlayClick}>\n            {children}\n        </div>\n    );\n}\n\nexport default ModalOverlay;","import { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC } from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\nimport styles from './modal.module.css';\n\ninterface IModalProps {\n    header?: string;\n    headerClassName?: string;\n    onClose: () => void;\n};\n\nconst Modal: FC<IModalProps> = ({ header = null, headerClassName = null, onClose, children }) => {\n    React.useEffect(() => {\n        const closeOnEscKeyDown = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') onClose();\n        };\n\n        document.addEventListener('keydown', closeOnEscKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', closeOnEscKeyDown);\n        };\n    }, [onClose]);\n\n    return ReactDOM.createPortal(\n        <ModalOverlay onClick={onClose}>\n            <div className={`${styles.modal} pt-10 pb-15 text`}>\n                <header className={`${styles.header} mr-10 ml-10`}>\n                    <h1\n                        className={`${headerClassName ? headerClassName : ''} text text_type_main-large`}\n                    >\n                        {header}\n                    </h1>\n                    <CloseIcon type=\"primary\" onClick={onClose} />\n                </header>\n                {children}\n            </div>\n        </ModalOverlay>\n        , document.getElementById('modal') as HTMLDivElement);\n}\n\nexport default Modal;","export default __webpack_public_path__ + \"static/media/graphics.5bf6b48a.png\";","import { FC } from 'react';\nimport checkMarkIconPath from '../../../images/graphics.png';\nimport styles from './order-details.module.css';\n\ninterface IOrderDetailsProps {\n    orderNumber: number;\n};\n\nconst OrderDetails: FC<IOrderDetailsProps> = ({ orderNumber }) => {\n    return (\n        <div className={`${styles.orderDetails} pt-4 pb-15 text text_type_main-default`}>\n            <div className={`${styles.orderNumber} mb-8 text text_type_digits-large`}>{orderNumber}</div>\n            <div className='mb-15 text text_type_main-medium'>идентификатор заказа</div>\n            <img className='mb-15' src={checkMarkIconPath} alt='Check mark icon' width='107' height='102' />\n            <div className='mb-2'>Ваш заказ начали готовить</div>\n            <div className={styles.textColor}>Дождитесь готовности на орбитальной станции</div>\n        </div>\n    );\n}\n\nexport default OrderDetails;","import { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport loading from '../../../images/loading.svg';\nimport { getUser } from '../../../services/actions/auth';\nimport { getOrder } from '../../../services/actions/order';\nimport { useDispatch, useSelector } from '../../../services/hooks';\nimport Modal from '../../modal/modal';\nimport OrderDetails from '../../modal/order-details/order-details';\nimport styles from './info.module.css';\n\nconst Info: FC = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { bun, ingredients } = useSelector(state => state.burgerConstructor.constructorIngredients);\n    const { order, orderRequestSuccess, orderRequest } = useSelector(state => state.order);\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n    const user = useSelector(state => state.auth.user);\n\n    const totalPrice = useMemo<number>(() => {\n        const ingredientsPrice = ingredients.reduce((acc, item) => acc + item.price, 0);\n        const bunPrice = (bun ? bun.price * 2 : 0);\n        return ingredientsPrice + bunPrice;\n    }, [bun, ingredients]);\n\n    const ingredientsIdList = useMemo<Array<string>>(() => {\n        const list = ingredients.map(item => item._id);\n        if (bun) list.push(bun._id);\n        return list;\n    }, [bun, ingredients]);\n\n    const orderNumber = useMemo<number>(() => order ? order?.number : 0, [order]);\n\n    useEffect(() => {\n        dispatch(getUser());\n    }, [dispatch]);\n\n    const onButtonClick = () => {\n        if (!user) {\n            history.push({\n                pathname: '/login',\n                state: {\n                    from: '/'\n                }\n            });\n        } else {\n            if (!ingredientsIdList.length) return;\n\n            dispatch(getOrder(ingredientsIdList));\n            setIsModalOpen(true);\n        }\n    };\n\n    return (\n        <div\n            className={`${styles.info} ${orderRequest ? styles.disabledButton : ''}`}\n            id='info'\n        >\n            <div className={`${styles.price} mr-10`}>\n                <span className='text_type_digits-medium mr-2'>{totalPrice}</span>\n                <CurrencyIcon type=\"primary\" />\n            </div>\n            <Button\n                type=\"primary\"\n                size=\"large\"\n                onClick={onButtonClick}\n            >\n                {orderRequest\n                    ? <img className='ml-10 mr-10' src={loading} alt='loading' width=\"18\" height=\"18\" />\n                    : 'Оформить заказ'\n                }\n            </Button>\n            {isModalOpen && orderRequestSuccess && <Modal onClose={() => setIsModalOpen(false)}>\n                <OrderDetails orderNumber={orderNumber} />\n            </Modal>}\n        </div>\n    );\n}\n\nexport default Info;","import React, { FC } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { ADD_CONSTRUCTOR_INGREDIENT } from '../../services/actions/burger-constructor';\nimport { useDispatch } from '../../services/hooks';\nimport BurgerComponents from './burger-components/burger-components';\nimport styles from './burger-constructor.module.css';\nimport Info from './info/info';\n\nconst BurgerConstructor: FC = () => {\n    const dispatch = useDispatch();\n\n    const [, dropTarget] = useDrop({\n        accept: 'ingredients',\n        drop(item) {\n            dispatch({\n                type: ADD_CONSTRUCTOR_INGREDIENT,\n                item\n            });\n        }\n    });\n\n    return (\n        <section\n            ref={dropTarget}\n            className={`${styles.wrapper} pt-25 pl-4`}\n        >\n            <BurgerComponents />\n            <Info />\n        </section>\n    );\n}\n\nexport default BurgerConstructor;","import { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { useHistory, useLocation } from 'react-router';\nimport { TBurgerConstructorItem } from '../../../../../types/app.types';\nimport styles from './ingredient-item.module.css';\n\ninterface IIngredientItemProps {\n    item: TBurgerConstructorItem;\n};\n\nconst IngredientItem: FC<IIngredientItemProps> = ({ item }) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const [, dragRef] = useDrag({\n        type: 'ingredients',\n        item: item\n    });\n\n    const onClick = () => {\n        history.push(`/ingredients/${item._id}`, { background: location });\n    };\n\n    return (\n        <div\n            className={styles.item}\n            onClick={onClick}\n            ref={dragRef}\n        >\n            <img className={`${styles.image} ml-4 mr-4 mb-1`} src={item.image} alt={item.name} />\n            <div className={`${styles.price} mb-1`}>\n                <span className='mr-2 text_type_digits-default'>{item.price}</span>\n                <CurrencyIcon type=\"primary\" />\n            </div>\n            <div className={styles.name}>{item.name}</div>\n            {item.count && item.count > 0 && <Counter count={item.count} size=\"default\" />}\n        </div>\n    );\n}\n\nexport default IngredientItem;","import { FC } from 'react';\nimport { TBurgerConstructorItem } from '../../../../types/app.types';\nimport IngredientItem from './ingredient-item/ingredient-item';\nimport styles from './ingredients-section.module.css';\n\ninterface IIngredientsSectionProps {\n    title: string;\n    id: string;\n    items: Array<TBurgerConstructorItem>\n};\n\nconst IngredientsSection: FC<IIngredientsSectionProps> = ({ title, id, items }) => {\n    return (\n        <section id={id}>\n            <h2 className='text_type_main-medium mb-6'>{title}</h2>\n            <div className={`${styles.ingredients} pl-4 pr-4 pb-10`}>\n                {\n                    items.map(item => {\n                        return (\n                            <IngredientItem\n                                item={item}\n                                key={item._id}\n                            />\n                        );\n                    })\n                }\n            </div>\n        </section>\n    );\n}\n\nexport default IngredientsSection;","import { FC, useMemo } from 'react';\nimport { useSelector } from '../../../services/hooks';\nimport { TBurgerConstructorItem, TTabItem } from '../../../types/app.types';\nimport IngredientsSection from './ingredients-section/ingredients-section';\nimport style from './ingredients.module.css';\n\ninterface IIngredientsProps {\n    tabs: Array<TTabItem>;\n    onScroll: (e: React.UIEvent<HTMLDivElement, UIEvent>) => void;\n};\n\nconst Ingredients: FC<IIngredientsProps> = ({ tabs, onScroll }) => {\n    const burgersData = useSelector(state => state.burgerConstructor.ingredients);\n    const { bun, ingredients } = useSelector(state => state.burgerConstructor.constructorIngredients);\n\n    const burgersDataWithCount = useMemo<Array<TBurgerConstructorItem>>(() => {\n        let burgerIngredients = [...ingredients];\n        if (bun) {\n            burgerIngredients.push(bun);\n            burgerIngredients.push(bun);\n        }\n        return burgersData.map(item => ({ ...item, count: burgerIngredients.filter(elem => elem._id === item._id).length }));\n    }, [burgersData, bun, ingredients]);\n\n    return (\n        <>\n            <div className={style.ingredients} onScroll={onScroll}>\n                {\n                    tabs.map((item) => {\n                        return (\n                            <IngredientsSection\n                                title={item.title}\n                                id={item.id}\n                                key={item.id}\n                                items={burgersDataWithCount.filter(elem => elem.type === item.id)}\n                            />\n                        );\n                    })\n                }\n            </div >\n        </>\n    );\n}\n\nexport default Ingredients;","import { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC } from 'react';\nimport { TTabItem } from '../../../types/app.types';\nimport styles from './tabs.module.css';\n\ninterface ITabsProps {\n    data: Array<TTabItem>;\n    activeTab: string;\n    onClick: (value: string) => void;\n};\n\nconst Tabs: FC<ITabsProps> = ({ data, activeTab, onClick }) => {\n    return (\n        <nav className={`${styles.tabs} mb-10`}>\n            {data.map((item) => {\n                return (\n                    <Tab\n                        value={item.id}\n                        key={item.id}\n                        active={activeTab === item.id}\n                        onClick={onClick}\n                    >\n                        {item.title}\n                    </Tab>\n                );\n            })}\n        </nav>\n    );\n}\n\nexport default Tabs;","import React, { FC, useState } from 'react';\nimport styles from './burger-ingredients.module.css';\nimport Ingredients from './ingredients/ingredients';\nimport Tabs from './tabs/tabs';\n\nconst BurgerIngredients: FC = () => {\n    const [activeTab, setActiveTab] = useState<string>('bun');\n\n    const tabs = [\n        {\n            id: 'bun',\n            title: 'Булки'\n        }, {\n            id: 'sauce',\n            title: 'Соусы'\n        }, {\n            id: 'main',\n            title: 'Начинки'\n        }\n    ];\n\n    const onTabClick = (tab: string) => {\n        setActiveTab(tab);\n        const element = document.getElementById(tab);\n        if (element) element.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    const onScroll = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const targetTop = e.currentTarget.getBoundingClientRect().top;\n        let sections = Array.from(e.currentTarget.querySelectorAll('section'))\n            .map(section => ({\n                id: section.id,\n                top: Math.abs(section.getBoundingClientRect().top - targetTop)\n            }));\n        if (!sections.length) return;\n\n        sections.sort((a, b) => a.top < b.top ? -1 : 1);\n        if (activeTab !== sections[0].id) setActiveTab(sections[0].id);\n    };\n\n    return (\n        <div className={`${styles.wrapper} pt-10 mr-10`}>\n            <h1 className=\"text_type_main-large mb-5\">Соберите бургер</h1>\n            <Tabs\n                data={tabs}\n                activeTab={activeTab}\n                onClick={onTabClick}\n            />\n            <Ingredients tabs={tabs} onScroll={onScroll} />\n        </div>\n    );\n}\n\nexport default BurgerIngredients;","import { FC } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\nimport styles from './home.module.css';\n\nexport const HomePage: FC = () => {\n    return (\n        <main className={styles.main}>\n            <DndProvider backend={HTML5Backend}>\n                <BurgerIngredients />\n                <BurgerConstructor />\n            </DndProvider>\n        </main>\n    );\n}","import { FC } from 'react';\nimport styles from './ingredient-details-value.module.css';\n\ninterface IIngredientDetailsValueProps {\n    text: string;\n    value: number;\n};\n\nconst IngredientDetailsValue: FC<IIngredientDetailsValueProps> = ({ text, value }) => {\n    return (\n        <div className={styles.value}>\n            <div className='mb-2'>{text}</div>\n            <div className='text text_type_digits-default'>{value}</div>\n        </div>\n    );\n}\n\nexport default IngredientDetailsValue;","import { FC, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { useSelector } from '../../../services/hooks';\nimport IngredientDetailsValue from './ingredient-details-value.jsx/ingredient-details-value';\nimport styles from './ingredient-details.module.css';\n\nconst IngredientDetails: FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n\n    const { ingredients, ingredientsRequest, ingredientsFailed } = useSelector(state => state.burgerConstructor);\n    const filteredIngredient = ingredients.filter(item => item._id === id);\n\n    useEffect(() => {\n        if (ingredientsFailed) {\n            setTimeout(() => {\n                history.replace('/');\n            }, 3000)\n        }\n    }, [ingredientsFailed, history]);\n\n    if (ingredientsRequest || (!ingredients.length && !ingredientsFailed)) {\n        return null;\n    }\n\n    const item = filteredIngredient[0];\n\n    return (\n        <div className={styles.ingredientDetails}>\n            {ingredientsFailed ? (\n                <h1 className='text text_type_main-large'>Мы не смогли найти ваш ингредиент :(</h1>\n            ) : (\n                <>\n                    <img className='mb-4' src={item.image_large} alt='ingredient' width='480' height='240' />\n                    <div className='mb-8 text text_type_main-medium'>{item.name}</div>\n                    <div className={`${styles.nutritions} text text_type_main-default`}>\n                        <IngredientDetailsValue text='Калории, ккал' value={item.calories} />\n                        <IngredientDetailsValue text='Белки, г' value={item.proteins} />\n                        <IngredientDetailsValue text='Жиры, г' value={item.fat} />\n                        <IngredientDetailsValue text='Углеводы, г' value={item.carbohydrates} />\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default IngredientDetails;","import { FC } from \"react\";\nimport IngredientDetails from \"../components/modal/ingredient-details/ingredient-details\";\nimport styles from \"./home.module.css\";\n\nexport const IngredientDetailsPage: FC = () => {\n    return (\n        <div className={`${styles.ingredientDetails} mt-30`}>\n            <h1 className='text text_type_main-large'>Детали ингредиента</h1>\n            <IngredientDetails />\n        </div>\n    );\n}","import { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC, useEffect, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { getUser, signIn } from '../services/actions/auth';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport styles from './home.module.css';\n\nexport interface ILoginForm {\n    email: string;\n    password: string;\n};\n\nexport const LoginPage: FC = () => {\n    const dispatch = useDispatch();\n    const { state } = useHistory<{ from?: string }>().location;\n\n    const [form, setForm] = useState<ILoginForm>({ email: '', password: '' });\n    const [isPasswordVisible, setPasswordVisible] = useState<boolean>(false);\n    const { user, signInSuccess } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(getUser());\n    }, [dispatch]);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const onIconClick = () => {\n        setPasswordVisible(!isPasswordVisible);\n    };\n\n    const onClick = (e: React.FormEvent) => {\n        e.preventDefault();\n        dispatch(signIn(form));\n    };\n\n    if (user) {\n        return (\n            <Redirect\n                to={state?.from || '/'}\n            />\n        );\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <form onSubmit={onClick} className={`${styles.form} mb-20`}>\n                <h1 className={styles.heading}>Вход</h1>\n                <Input\n                    type='email'\n                    placeholder='E-mail'\n                    value={form.email}\n                    name='email'\n                    size='default'\n                    onChange={onChange}\n                />\n                <Input\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    placeholder='Пароль'\n                    value={form.password}\n                    name='password'\n                    icon={isPasswordVisible ? 'HideIcon' : 'ShowIcon'}\n                    size='default'\n                    onChange={onChange}\n                    onIconClick={onIconClick}\n                    error={!signInSuccess}\n                    errorText={signInSuccess ? '' : 'Неверный пароль или e-mail'}\n                />\n                <Button type=\"primary\" size=\"medium\">Войти</Button>\n            </form>\n            <div className={styles.actions}>\n                <p>Вы — новый пользователь? <Link className={styles.link} to='/register'>Зарегистрироваться</Link></p>\n                <p>Забыли пароль? <Link className={styles.link} to='/forgot-password'>Восстановить пароль</Link></p>\n            </div>\n        </div>\n    );\n}","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { useSelector } from '../../services/hooks';\nimport { TBurgerConstructorItem } from '../../types/app.types';\nimport { getFormattedDate, getOrdersIngredients, getTotalCost } from '../../utils';\nimport OrderStatus from '../orders/order-card/order-status/order-status';\nimport styles from './order-info.module.css';\n\nconst OrderInfo: FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const { pathname } = useLocation();\n\n    const allOrders = useSelector(state => state.allOrders.ordersData?.orders || []);\n    const userOrders = useSelector(state => state.userOrders.userOrdersData?.orders || []);\n    const orders = pathname.includes('/profile/orders')\n        ? userOrders\n        : allOrders;\n\n    const ingredients = useSelector(state => state.burgerConstructor.ingredients);\n    const filteredOrders = getOrdersIngredients(orders.filter(item => item._id === id), ingredients);\n\n    if (!filteredOrders.length) {\n        return null;\n    }\n\n    const order = filteredOrders[0];\n\n    const ingredientsWithCount = order.ingredients\n        .map((item: TBurgerConstructorItem) => ({\n            ...item,\n            count: order.ingredients.filter((element: TBurgerConstructorItem) => item._id === element._id).length * (item.type === 'bun' ? 2 : 1)\n        }))\n        .filter((item: TBurgerConstructorItem, index: number) => order.ingredients.findIndex((element: TBurgerConstructorItem) => element._id === item._id) === index);\n\n    return (\n        <div className={`${styles.wrapper} text text_type_main-default`}>\n            <div className='mb-15'>\n                <h1 className=\"text text_type_main-medium mb-2\">{order.name}</h1>\n                <OrderStatus status={order.status} />\n            </div>\n            <div className='mb-10'>\n                <h2 className=\"text text_type_main-medium mb-6\">Состав:</h2>\n                <div className={`${styles.ingredients} pr-8`}>\n                    {ingredientsWithCount.map((ingredient: TBurgerConstructorItem, index: number) => (\n                        <div key={index} className={styles.ingredient}>\n                            <img className={styles.image} src={ingredient.image} alt='ingredient' />\n                            <div className={styles.name}>{ingredient.name}</div>\n                            <div className={styles.price}>\n                                <div className='text text_type_digits-default'>{`${ingredient.count} x ${ingredient.price}`}</div>\n                                <CurrencyIcon type=\"primary\" />\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className={styles.footer}>\n                <div className={styles.date}>{getFormattedDate(order.createdAt)}</div>\n                <div className={styles.totalPrice}>\n                    <div className='text text_type_digits-default'>{getTotalCost(order.ingredients)}</div>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderInfo;","import { FC } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport OrderInfo from \"../components/order-info/order-info\";\nimport { useSelector } from \"../services/hooks\";\nimport { getOrdersIngredients } from \"../utils\";\nimport styles from './order-info.module.css';\n\nexport const OrderInfoPage: FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const { pathname } = useLocation();\n\n    const allOrders = useSelector(state => state.allOrders.ordersData?.orders || []);\n    const userOrders = useSelector(state => state.userOrders.userOrdersData?.orders || []);\n    const orders = pathname.includes('/profile/orders')\n        ? userOrders\n        : allOrders;\n\n    const ingredients = useSelector(state => state.burgerConstructor.ingredients);\n    const filteredOrders = getOrdersIngredients(orders.filter(item => item._id === id), ingredients);\n\n    console.log('orderInfoPage', filteredOrders);\n\n    if (!filteredOrders.length) {\n        return null;\n    }\n\n    return (\n        <div className={`${styles.container} pt-30`}>\n            <div className={`${styles.header} text text_type_digits-default`}>#{filteredOrders[0].number}</div>\n            <OrderInfo />\n        </div>\n    );\n}","import { FC } from \"react\";\nimport Orders from \"../components/orders/orders\";\nimport { useSelector } from \"../services/hooks\";\nimport styles from \"./orders.module.css\";\n\nexport const OrdersPage: FC = () => {\n    const orders = useSelector(state => state.userOrders.userOrdersData?.orders || []);\n\n    return (\n        <section className={styles.orders}>\n            <Orders orders={orders} showStatus={true} />\n        </section>\n    );\n}","import { FC, useMemo } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { signOut } from '../../services/actions/auth';\nimport { useDispatch } from '../../services/hooks';\nimport styles from './profile-nav.module.css';\n\nconst ProfileNav: FC = () => {\n    const pathname = useLocation().pathname;\n    const dispatch = useDispatch();\n\n    const navLinks = [\n        {\n            id: 'profile',\n            path: '/profile',\n            text: 'Профиль',\n            caption: 'изменить свои персональные данные'\n        },\n        {\n            id: 'orders',\n            path: '/profile/orders',\n            text: 'История заказов',\n            caption: 'просмотреть свою историю заказов'\n        }\n    ];\n\n    const activeLink = useMemo<string>(() => {\n        const path = pathname.split('/');\n        return path[path.length - 1];\n    }, [pathname]);\n\n    const onExitClick = () => {\n        dispatch(signOut());\n    };\n\n    return (\n        <nav className={styles.nav}>\n            <ul className='text text_type_main-medium mb-20'>\n                {navLinks.map(item =>\n                    <li className={`${activeLink === item.id ? styles.active : ''} ${styles.link}`} key={item.id}>\n                        <Link\n                            to={item.path}\n                        >\n                            {item.text}\n                        </Link>\n                    </li>\n                )}\n                <li className={styles.link} onClick={onExitClick}>Выход</li>\n            </ul>\n            <div className={styles.caption}>\n                В этом разделе вы можете<br />\n                {navLinks.filter(({ id }) => id === activeLink).map(({ caption }) => caption)}\n            </div>\n        </nav>\n    );\n};\n\nexport default ProfileNav;","import { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { OrdersPage } from '.';\nimport ProfileNav from '../components/profile-nav/profile-nav';\nimport { getUser, updateUser } from '../services/actions/auth';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { TUser } from '../types/state.types';\nimport styles from './profile.module.css';\n\nexport interface IProfileFormField {\n    value: string;\n    placeholder: string;\n    disabled: boolean;\n};\n\ntype FormFields = 'name' | 'email' | 'password';\n\nexport type TProfileForm<T = IProfileFormField> = {\n    [ff in FormFields]: T;\n};\n\nexport const ProfilePage: FC = () => {\n    const dispatch = useDispatch();\n\n    const user = useSelector(state => state.auth.user);\n    const [form, setForm] = useState<TProfileForm>({\n        name: {\n            value: '',\n            placeholder: 'Имя',\n            disabled: true\n        },\n        email: {\n            value: '',\n            placeholder: 'Логин',\n            disabled: true\n        },\n        password: {\n            value: '',\n            placeholder: 'Пароль',\n            disabled: true\n        }\n    });\n    const [initialForm, setInitialForm] = useState<TProfileForm>(form);\n\n    const formKeys = Object.keys(form) as FormFields[];\n\n    useEffect(() => {\n        dispatch(getUser());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (user) {\n            const updatedForm = { ...form };\n\n            const userKeys = Object.keys(user) as (keyof TUser)[];\n            for (const key of userKeys) {\n                if (updatedForm[key]) {\n                    updatedForm[key].value = user[key];\n                    updatedForm[key].disabled = true;\n                }\n            }\n            setForm(updatedForm);\n            setInitialForm(updatedForm);\n        }\n    }, [user]);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const targetName = e.target.name as FormFields;\n        setForm({ ...form, [targetName]: { ...form[targetName], value: e.target.value } });\n    };\n\n    const onIconClick = (key: FormFields) => {\n        if (form[key].disabled) {\n            setForm({ ...form, [key]: { ...form[key], disabled: false } });\n            setTimeout(() => {\n                const formElement = document.querySelector(`[name=${key}]`) as HTMLInputElement;\n                formElement.focus();\n            }, 0);\n        } else {\n            setForm({ ...form, [key]: { ...form[key], value: initialForm[key].value, disabled: true } });\n            setTimeout(() => {\n                const formElement = document.querySelector(`[name=${key}]`) as HTMLInputElement;\n                formElement.blur();\n            }, 0);\n        }\n    };\n\n    const onCancelClick = () => {\n        setForm(initialForm);\n    };\n\n    const onSaveClick = () => {\n        //e.preventDefault();\n\n        const updatedForm = {} as TProfileForm<string>;\n        for (const key of formKeys) {\n            setForm({ ...form, [key]: { ...form[key], disabled: true } });\n\n            if (form[key].value !== initialForm[key].value) {\n                updatedForm[key] = form[key].value;\n            }\n        }\n\n        if (Object.keys(updatedForm).length) {\n            dispatch(updateUser(updatedForm));\n        }\n    };\n\n    return (\n        <div className={`${styles.wrapper} mt-30`}>\n            <ProfileNav />\n            <Switch>\n                <Route path=\"/profile\" exact={true}>\n                    <form className={styles.form}>\n                        {formKeys.map(key => (\n                            <Input\n                                type={key === 'password' ? \"password\" : \"text\"}\n                                placeholder={form[key].placeholder}\n                                value={form[key].value}\n                                name={key}\n                                disabled={form[key].disabled}\n                                icon={form[key].disabled ? \"EditIcon\" : \"CloseIcon\"}\n                                onChange={onChange}\n                                onIconClick={() => onIconClick(key)}\n                                key={key}\n                            />\n                        ))}\n                        {formKeys.filter(key => !form[key].disabled).length ? (\n                            <div className={styles.actions}>\n                                <div className={`${styles.cancel} mr-7`} onClick={onCancelClick}>Отмена</div>\n                                <Button onClick={onSaveClick}>Сохранить</Button>\n                            </div>\n                        ) : null}\n                    </form>\n                </Route>\n                <Route path=\"/profile/orders\" exact={true}>\n                    <OrdersPage />\n                </Route>\n            </Switch>\n        </div>\n    );\n}","import { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC, useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getUser, signUp } from '../services/actions/auth';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport styles from './home.module.css';\n\nexport interface IRegisterForm {\n    name: string;\n    email: string;\n    password: string;\n};\n\nexport const RegistertPage: FC = () => {\n    const dispatch = useDispatch();\n\n    const [form, setForm] = useState<IRegisterForm>({ name: '', email: '', password: '' });\n    const [isPasswordVisible, setPasswordVisible] = useState<boolean>(false);\n    const user = useSelector(state => state.auth.user);\n\n    useEffect(() => {\n        dispatch(getUser());\n    }, [dispatch]);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const onIconClick = () => {\n        setPasswordVisible(!isPasswordVisible);\n    };\n\n    const onClick = (e: React.FormEvent) => {\n        e.preventDefault();\n        dispatch(signUp(form));\n    };\n\n    if (user) {\n        return (\n            <Redirect\n                to='/'\n            />\n        );\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <form onSubmit={onClick} className={`${styles.form} mb-20`}>\n                <h1 className={styles.heading}>Регистрация</h1>\n                <Input\n                    type='text'\n                    placeholder='Имя'\n                    value={form.name}\n                    name='name'\n                    size='default'\n                    onChange={onChange}\n                />\n                <Input\n                    type='email'\n                    placeholder='E-mail'\n                    value={form.email}\n                    name='email'\n                    size='default'\n                    onChange={onChange}\n                />\n                <Input\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    placeholder='Пароль'\n                    value={form.password}\n                    name='password'\n                    icon={isPasswordVisible ? 'HideIcon' : 'ShowIcon'}\n                    size='default'\n                    onChange={onChange}\n                    onIconClick={onIconClick}\n                />\n                <Button type=\"primary\" size=\"medium\">Зарегистрироваться</Button>\n            </form>\n            <div className={styles.actions}>\n                <p>Уже зарегистрированы? <Link className={styles.link} to='/login'>Войти</Link></p>\n            </div>\n        </div>\n    );\n}","import { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC, useCallback, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { resetPassword } from '../utils/api';\nimport styles from './home.module.css';\n\nexport interface IResetPasswordForm {\n    password: string;\n    token: string;\n}\n\nexport const ResetPasswordPage: FC = () => {\n    const history = useHistory<{ from?: string }>();\n    const { state } = history.location;\n\n    const [form, setForm] = useState<IResetPasswordForm>({ password: '', token: '' });\n    const [isPasswordVisible, setPasswordVisible] = useState<boolean>(false);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const onIconClick = () => {\n        setPasswordVisible(!isPasswordVisible);\n    };\n\n    const reset = useCallback(e => {\n        e.preventDefault();\n        resetPassword(form)\n            .then(res => {\n                console.log(res);\n            });\n        history.replace('/login');\n    }, [form]);\n\n    if (state?.from !== '/forgot-password') {\n        return (\n            <Redirect\n                to='/'\n            />\n        );\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <form onSubmit={reset} className={`${styles.form} mb-20`}>\n                <h1 className={styles.heading}>Восстановление пароля</h1>\n                <Input\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    placeholder='Введите новый пароль'\n                    value={form.password}\n                    name='password'\n                    icon={isPasswordVisible ? 'HideIcon' : 'ShowIcon'}\n                    size='default'\n                    onChange={onChange}\n                    onIconClick={onIconClick}\n                />\n                <Input\n                    type='text'\n                    placeholder='Введите код из письма'\n                    value={form.token}\n                    name='token'\n                    size='default'\n                    onChange={onChange}\n                />\n                <Button type=\"primary\" size=\"medium\">Сохранить</Button>\n            </form>\n            <div className={styles.actions}>\n                <p>Вспомнили пароль? <Link className={styles.link} to='/login'>Войти</Link></p>\n            </div>\n        </div>\n    );\n}","import { TOrdersData } from './../../types/state.types';\n\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\n\nexport interface IWsConnectionStartAction {\n    readonly type: typeof WS_CONNECTION_START;\n};\n\nexport interface IWsConnectionSuccessAction {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n};\n\nexport interface IWsConnectionErrorAction {\n    readonly type: typeof WS_CONNECTION_ERROR;\n};\n\nexport interface IWsConnectionClosedAction {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n};\n\nexport interface IWsGetMessageAction {\n    readonly type: typeof WS_GET_MESSAGE;\n    readonly payload: TOrdersData\n};\n\nexport type TAllOrdersActions = IWsConnectionStartAction\n    | IWsConnectionSuccessAction\n    | IWsConnectionErrorAction\n    | IWsConnectionClosedAction\n    | IWsGetMessageAction;","import { TOrdersData } from './../../types/state.types';\nexport const WS_USER_ORDERS_CONNECTION_START: 'WS_USER_ORDERS_CONNECTION_START' = 'WS_USER_ORDERS_CONNECTION_START';\nexport const WS_USER_ORDERS_CONNECTION_SUCCESS: 'WS_USER_ORDERS_CONNECTION_SUCCESS' = 'WS_USER_ORDERS_CONNECTION_SUCCESS';\nexport const WS_USER_ORDERS_CONNECTION_ERROR: 'WS_USER_ORDERS_CONNECTION_ERROR' = 'WS_USER_ORDERS_CONNECTION_ERROR';\nexport const WS_USER_ORDERS_CONNECTION_CLOSED: 'WS_USER_ORDERS_CONNECTION_CLOSED' = 'WS_USER_ORDERS_CONNECTION_CLOSED';\nexport const WS_USER_ORDERS_GET_MESSAGE: 'WS_USER_ORDERS_GET_MESSAGE' = 'WS_USER_ORDERS_GET_MESSAGE';\n\nexport interface IWsUserOrdersConnectionStartAction {\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_START;\n};\n\nexport interface IWsUserOrdersConnectionSuccessAction {\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_SUCCESS;\n};\n\nexport interface IWsUserOrdersConnectionErrorAction {\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_ERROR;\n};\n\nexport interface IWsUserOrdersConnectionClosedAction {\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_CLOSED;\n};\n\nexport interface IWsUserOrdersGetMessageAction {\n    readonly type: typeof WS_USER_ORDERS_GET_MESSAGE;\n    readonly payload: TOrdersData;\n};\n\nexport type TUserOrdersActions = IWsUserOrdersConnectionStartAction\n    | IWsUserOrdersConnectionSuccessAction\n    | IWsUserOrdersConnectionErrorAction\n    | IWsUserOrdersConnectionClosedAction\n    | IWsUserOrdersGetMessageAction;","import PropTypes from 'prop-types';\nimport { FC } from 'react';\nimport styles from './nav-element.module.css';\n\n\ninterface INavElementProps {\n    icon: JSX.Element;\n    text: string;\n    isActive?: boolean;\n    path?: string;\n    onLinkClick: (path: string) => void;\n};\n\nconst NavElement: FC<INavElementProps> = ({ icon, text, isActive = false, path = '/', onLinkClick }) => {\n    const elementClick = () => {\n        onLinkClick(path);\n    };\n\n    return (\n        <div\n            className={`\n                ${isActive ? styles.active : ''} \n                ${styles.element} \n                pl-5 pr-5 text_color_inactive`}\n            onClick={elementClick}>\n            {icon} {text}\n        </div>\n    );\n}\n\nNavElement.propTypes = {\n    icon: PropTypes.element.isRequired,\n    text: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    path: PropTypes.string,\n    onLinkClick: PropTypes.func.isRequired\n}\n\nexport default NavElement;","import { BurgerIcon, ListIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport NavElement from '../nav-element/nav-element';\nimport styles from './nav-list.module.css';\n\nconst NavList: FC = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const [activeLink, setActiveLink] = useState<string>('/');\n\n    useEffect(() => {\n        setActiveLink(location.pathname);\n    }, [location]);\n\n    const menu = [\n        {\n            name: 'constructor',\n            text: 'Конструктор',\n            icon: BurgerIcon,\n            path: '/'\n        },\n        {\n            name: 'ribbon',\n            text: 'Лента заказов',\n            icon: ListIcon,\n            path: '/feed'\n        }\n    ];\n\n    const onLinkClick = (path: string): void => {\n        history.replace(path);\n    };\n\n    return (\n        <ul className={styles.navList}>\n            {menu.map((item, index) => {\n                const Icon = item.icon;\n                const isActive = activeLink === item.path;\n\n                return (\n                    <li className={index === (menu.length - 1) ? '' : \"mr-2\"} key={item.name}>\n                        <NavElement\n                            icon={<Icon type={isActive ? \"primary\" : \"secondary\"} />}\n                            text={item.text}\n                            isActive={isActive}\n                            path={item.path}\n                            onLinkClick={onLinkClick}\n                        />\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default NavList;","import { ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport NavElement from '../nav-element/nav-element';\n\nconst ProfileMenu: FC = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const onLinkClick = () => {\n        history.replace('/profile');\n    };\n\n    return (\n        <>\n            <NavElement\n                isActive={location.pathname.includes('/profile')}\n                icon={<ProfileIcon type=\"secondary\" />}\n                text=\"Личный кабинет\"\n                onLinkClick={onLinkClick}\n            />\n        </>\n    );\n}\n\nexport default ProfileMenu;","import { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './app-header.module.css';\nimport NavList from './nav-list/nav-list';\nimport ProfileMenu from './profile-menu/profile-menu';\n\nconst AppHeader: FC = () => {\n    return (\n        <header className={`${styles.appHeader} pt-4 pb-4`}>\n            <nav className={styles.content}>\n                <NavList />\n                <Link to='/'>\n                    <Logo />\n                </Link>\n                <ProfileMenu />\n            </nav>\n        </header>\n    );\n}\n\nexport default AppHeader;","import { FC } from 'react';\nimport { useSelector } from \"../services/hooks\";\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { getCookie } from '../utils/cookie';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n    const user = useSelector(state => state.auth.user);\n    const cookie = getCookie('accessToken');\n\n    if (!user && cookie) return null;\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        ></Route>\n    )\n};\n\nexport default ProtectedRoute;","import { Location } from 'history';\nimport React, { FC, useEffect } from 'react';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { FeedPage, ForgotPasswordPage, HomePage, IngredientDetailsPage, LoginPage, OrderInfoPage, ProfilePage, RegistertPage, ResetPasswordPage } from '../../pages';\nimport { WS_CONNECTION_START } from '../../services/actions/allOrders';\nimport { getUser } from '../../services/actions/auth';\nimport { getIngredients } from '../../services/actions/burger-constructor';\nimport { WS_USER_ORDERS_CONNECTION_START } from '../../services/actions/userOrders';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport AppHeader from '../app-header/app-header';\nimport IngredientDetails from '../modal/ingredient-details/ingredient-details';\nimport Modal from '../modal/modal';\nimport OrderInfo from '../order-info/order-info';\nimport ProtectedRoute from '../protected-route';\nimport styles from './app.module.css';\n\ninterface ILocationState {\n  background: Location;\n  orderNumber: string;\n}\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation<ILocationState>();\n  const background = history.action === 'POP'\n    ? null\n    : location.state && location.state.background;\n  const orderNumber = location.state && location.state.orderNumber\n    ? location.state.orderNumber\n    : 0;\n\n  useEffect(() => {\n    dispatch(getIngredients());\n    dispatch({ type: WS_CONNECTION_START });\n    dispatch(getUser());\n  }, [dispatch]);\n\n  const user = useSelector(state => state.auth.user);\n  const wsConnected = useSelector(state => state.userOrders.wsConnected);\n\n  useEffect(() => {\n    if (user && !wsConnected) {\n      dispatch({ type: WS_USER_ORDERS_CONNECTION_START });\n    }\n  }, [user, dispatch]);\n\n  const modalOrderInfo = (<Modal\n    onClose={() => history.push(background ? background.pathname : '/', {})}\n    header={`#${orderNumber}`}\n    headerClassName='text text_type_digits-default'\n  >\n    <OrderInfo />\n  </Modal>);\n\n  return (\n    <div className={`${styles.app} text text_type_main-default`}>\n      <AppHeader />\n      <Switch location={background || location}>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegistertPage />\n        </Route>\n        <Route path=\"/forgot-password\">\n          <ForgotPasswordPage />\n        </Route>\n        <Route path=\"/reset-password\">\n          <ResetPasswordPage />\n        </Route>\n        <ProtectedRoute path='/profile/orders/:id'>\n          <OrderInfoPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile\">\n          <ProfilePage />\n        </ProtectedRoute>\n        <Route path=\"/\" exact={true}>\n          <HomePage />\n        </Route>\n        <Route path=\"/feed\" exact={true}>\n          <FeedPage />\n        </Route>\n        <Route path={`/ingredients/:id`}>\n          <IngredientDetailsPage />\n        </Route>\n        <Route path='/feed/:id'>\n          <OrderInfoPage />\n        </Route>\n      </Switch>\n\n      {background && history.action === 'PUSH' &&\n        <Switch>\n          <Route path=\"/ingredients/:id\">\n            <Modal\n              header='Детали ингредиента'\n              onClose={() => history.push(background.pathname, {})}\n            >\n              <IngredientDetails />\n            </Modal>\n          </Route>\n          <ProtectedRoute path=\"/profile/orders/:id\">\n            {modalOrderInfo}\n          </ProtectedRoute>\n          <Route path=\"/feed/:id\">\n            {modalOrderInfo}\n          </Route>\n        </Switch>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { MiddlewareAPI } from \"redux\";\nimport { getCookie } from \"../../utils/cookie\";\nimport { TApplicationActions, TSocketActions, TSocketUserOrdersActions } from './../types/index';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: TSocketActions | TSocketUserOrdersActions, provideToken = false) => {\n    // не могу понять, как здесь типизировать store\n    return (store: MiddlewareAPI) => {\n        let socket: WebSocket;\n\n        return (next: (action: TApplicationActions) => void) => (action: TApplicationActions) => {\n            const { dispatch, getState } = store;\n            const { type } = action;\n            const { wsInit, onOpen, onError, onMessage, onClose } = wsActions;\n            const user = getState().auth.user;\n\n            if (type === wsInit) {\n                let params = '';\n                if (provideToken && user) {\n                    const token = getCookie('accessToken');\n                    params = `?token=${token}`;\n                }\n                console.log(`${wsUrl}${params}`);\n\n                socket = new WebSocket(`${wsUrl}${params}`);\n            }\n\n            if (socket) {\n                socket.onopen = event => {\n                    dispatch({ type: onOpen, payload: event });\n                };\n\n                socket.onerror = event => {\n                    dispatch({ type: onError, payload: event })\n                };\n\n                socket.onmessage = event => {\n                    const { data } = event;\n                    const parsedData = JSON.parse(data);\n                    const { success, ...restParsedData } = parsedData;\n\n                    dispatch({ type: onMessage, payload: restParsedData });\n                };\n\n                socket.onclose = event => {\n                    dispatch({ type: onClose, payload: event })\n                };\n            }\n\n            next(action);\n        };\n    };\n};","import { WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from \"../actions/allOrders\";\nimport { TOrdersData } from './../../types/state.types';\nimport { TAllOrdersActions } from './../actions/allOrders';\n\ntype TAllOrdersState = {\n    wsConnected: boolean;\n    ordersData: TOrdersData | null;\n};\n\nconst initialState: TAllOrdersState = {\n    wsConnected: false,\n    ordersData: null\n};\n\nexport const allOrdersReducer = (state = initialState, action: TAllOrdersActions): TAllOrdersState => {\n    switch (action.type) {\n        case WS_CONNECTION_SUCCESS:\n            return {\n                ...state,\n                wsConnected: true\n            };\n        case WS_CONNECTION_ERROR:\n            return {\n                ...state,\n                wsConnected: false\n            };\n        case WS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                wsConnected: false\n            }\n        case WS_GET_MESSAGE:\n            return {\n                ...state,\n                ordersData: action.payload\n            };\n        default:\n            return state;\n    }\n};","import { TUser } from './../../types/state.types';\nimport { TAuthActions } from './../actions/auth';\nimport { CLEAR_USER, SET_SIGNIN_SUCCESS, SET_USER } from \"../actions/auth\";\n\ntype TAuthState = {\n    user: TUser | null;\n    signInSuccess: boolean;\n}\n\nconst initialState: TAuthState = {\n    user: null,\n    signInSuccess: true\n};\n\nexport const authReducer = (state = initialState, action: TAuthActions): TAuthState => {\n    switch (action.type) {\n        case SET_USER: {\n            return {\n                ...state,\n                user: action.user\n            };\n        }\n        case CLEAR_USER: {\n            return {\n                ...state,\n                user: null\n            };\n        }\n        case SET_SIGNIN_SUCCESS: {\n            return {\n                ...state,\n                signInSuccess: action.success\n            };\n        }\n        default:\n            return state;\n    }\n};","import { TBurgerConstructorActions } from './../actions/burger-constructor';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TBurgerConstructorItem } from '../../types/app.types';\nimport {\n    ADD_CONSTRUCTOR_INGREDIENT,\n    CHANGE_CONSTRUCTOR_INGREDIENT_POSITION,\n    CLEAR_CONSTRUCTOR,\n    GET_INGREDIENTS_REQUEST,\n    GET_INGREDIENTS_SUCCESS,\n    GET_INGREDIENTS_FAILED,\n    REMOVE_CONSTRUCTOR_INGREDIENT\n} from \"../actions/burger-constructor\";\n\ntype TBurgerConstructorState = {\n    ingredients: Array<TBurgerConstructorItem>;\n    ingredientsRequest: boolean;\n    ingredientsFailed: boolean;\n    constructorIngredients: {\n        bun: TBurgerConstructorItem | null,\n        ingredients: Array<TBurgerConstructorItem>\n    }\n};\n\nconst initialState: TBurgerConstructorState = {\n    ingredients: [],\n    ingredientsRequest: false,\n    ingredientsFailed: false,\n    constructorIngredients: {\n        bun: null,\n        ingredients: []\n    }\n};\n\nexport const burgerConstructorReducer = (state = initialState, action: TBurgerConstructorActions): TBurgerConstructorState => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST: {\n            return {\n                ...state,\n                ingredientsRequest: true\n            };\n        }\n        case GET_INGREDIENTS_SUCCESS: {\n            return {\n                ...state,\n                ingredientsFailed: false,\n                ingredients: action.items,\n                ingredientsRequest: false\n            };\n        }\n        case GET_INGREDIENTS_FAILED: {\n            return {\n                ...state,\n                ingredientsFailed: true,\n                ingredientsRequest: false\n            };\n        }\n        case ADD_CONSTRUCTOR_INGREDIENT: {\n            if (action.item.type === 'bun') {\n                return {\n                    ...state,\n                    constructorIngredients: {\n                        ...state.constructorIngredients,\n                        bun: action.item\n                    }\n                };\n            }\n\n            const changedIngredients = [...state.constructorIngredients.ingredients];\n            changedIngredients.push({ ...action.item, uid: uuidv4() });\n            return {\n                ...state,\n                constructorIngredients: {\n                    ...state.constructorIngredients,\n                    ingredients: changedIngredients\n                }\n            };\n        }\n        case REMOVE_CONSTRUCTOR_INGREDIENT: {\n            const changedIngredients = [...state.constructorIngredients.ingredients];\n            changedIngredients.splice(action.index, 1);\n            return {\n                ...state,\n                constructorIngredients: {\n                    ...state.constructorIngredients,\n                    ingredients: changedIngredients\n                }\n            };\n        }\n        case CLEAR_CONSTRUCTOR: {\n            return {\n                ...state,\n                constructorIngredients: {\n                    ...initialState.constructorIngredients\n                }\n            }\n        }\n        case CHANGE_CONSTRUCTOR_INGREDIENT_POSITION: {\n            const ingredient = state.constructorIngredients.ingredients.filter(element => element.uid === action.item.uid)[0];\n            const index = state.constructorIngredients.ingredients.indexOf(ingredient);\n\n            const changedIngredients = [...state.constructorIngredients.ingredients];\n            changedIngredients.splice(index, 1);\n            changedIngredients.splice(action.index, 0, ingredient);\n\n            return {\n                ...state,\n                constructorIngredients: {\n                    ...state.constructorIngredients,\n                    ingredients: changedIngredients\n                }\n            };\n        }\n        default:\n            return state;\n    }\n};","import { GET_ORDER_REQUEST, GET_ORDER_SUCCESS } from \"../actions/order\";\nimport { TOrderInfo } from './../../types/state.types';\nimport { TOrderActions } from './../actions/order';\n\ntype TOrderState = {\n    order: TOrderInfo | null;\n    orderRequestSuccess: boolean;\n    orderRequest: boolean\n};\n\nconst initialState: TOrderState = {\n    order: null,\n    orderRequestSuccess: false,\n    orderRequest: false\n};\n\nexport const orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\n    switch (action.type) {\n        case GET_ORDER_REQUEST: {\n            return {\n                ...state,\n                orderRequestSuccess: false,\n                orderRequest: true\n            }\n        }\n        case GET_ORDER_SUCCESS: {\n            return {\n                ...state,\n                order: action.order,\n                orderRequestSuccess: true,\n                orderRequest: false\n            }\n        }\n        default:\n            return state;\n    }\n};","import { TUserOrdersActions } from './../actions/userOrders';\nimport { TOrdersData } from './../../types/state.types';\nimport { WS_USER_ORDERS_CONNECTION_CLOSED, WS_USER_ORDERS_CONNECTION_ERROR, WS_USER_ORDERS_CONNECTION_SUCCESS, WS_USER_ORDERS_GET_MESSAGE } from \"../actions/userOrders\";\n\ntype TUserOrdersState = {\n    wsConnected: boolean;\n    userOrdersData: TOrdersData | null;\n};\n\nconst initialState: TUserOrdersState = {\n    wsConnected: false,\n    userOrdersData: null\n};\n\nexport const userOrdersReducer = (state = initialState, action: TUserOrdersActions): TUserOrdersState => {\n    switch (action.type) {\n        case WS_USER_ORDERS_CONNECTION_SUCCESS:\n            return {\n                ...state,\n                wsConnected: true\n            };\n        case WS_USER_ORDERS_CONNECTION_ERROR:\n            return {\n                ...state,\n                wsConnected: false\n            };\n        case WS_USER_ORDERS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                wsConnected: false\n            }\n        case WS_USER_ORDERS_GET_MESSAGE:\n            return {\n                ...state,\n                userOrdersData: action.payload\n            };\n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\nimport { allOrdersReducer } from \"./allOrders\";\nimport { authReducer } from \"./auth\";\nimport { burgerConstructorReducer } from \"./burger-constructor\";\nimport { orderReducer } from \"./order\";\nimport { userOrdersReducer } from './userOrders';\n\nexport const rootReducer = combineReducers({\n    burgerConstructor: burgerConstructorReducer,\n    order: orderReducer,\n    auth: authReducer,\n    allOrders: allOrdersReducer,\n    userOrders: userOrdersReducer\n});","import { applyMiddleware, compose, createStore, Store } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_CONNECTION_START, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from \"./actions/allOrders\";\nimport { WS_USER_ORDERS_CONNECTION_CLOSED, WS_USER_ORDERS_CONNECTION_ERROR, WS_USER_ORDERS_CONNECTION_START, WS_USER_ORDERS_CONNECTION_SUCCESS, WS_USER_ORDERS_GET_MESSAGE } from \"./actions/userOrders\";\nimport { socketMiddleware } from \"./middleware/socketMiddleware\";\nimport { rootReducer } from \"./reducers/app\";\n\nconst wsUrl = 'wss://norma.nomoreparties.space/orders/all';\nconst wsUserOrdersUrl = 'wss://norma.nomoreparties.space/orders';\n\nconst wsActions = {\n    wsInit: WS_CONNECTION_START,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onError: WS_CONNECTION_ERROR,\n    onMessage: WS_GET_MESSAGE,\n    onClose: WS_CONNECTION_CLOSED\n};\nconst wsUserOrdersActions = {\n    wsInit: WS_USER_ORDERS_CONNECTION_START,\n    onOpen: WS_USER_ORDERS_CONNECTION_SUCCESS,\n    onError: WS_USER_ORDERS_CONNECTION_ERROR,\n    onMessage: WS_USER_ORDERS_GET_MESSAGE,\n    onClose: WS_USER_ORDERS_CONNECTION_CLOSED\n};\n\n\nconst composeEnhancers = typeof window === 'object' && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] ? window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({}) : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsUrl, wsActions), socketMiddleware(wsUserOrdersUrl, wsUserOrdersActions, true)));\n\nexport function initStore(initialState: {} = {}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        enhancer\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/app/app';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { initStore } from './services/store';\n\nexport const store = initStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename=\"/react-burger\">\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-card_card__O8mT8\",\"header\":\"order-card_header__GbaAk\",\"timestamp\":\"order-card_timestamp__1VtqL\",\"content\":\"order-card_content__2XVEU\",\"images\":\"order-card_images__24m8Q\",\"addIngredient\":\"order-card_addIngredient__26UYa\",\"image\":\"order-card_image__3iZUh\",\"ingredientsCount\":\"order-card_ingredientsCount__IcNLt\",\"price\":\"order-card_price__20sM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-info_wrapper__M8UYs\",\"status\":\"order-info_status__wcc9g\",\"ingredients\":\"order-info_ingredients__2nbzc\",\"image\":\"order-info_image__14CQh\",\"ingredient\":\"order-info_ingredient__30pRC\",\"price\":\"order-info_price__sNxEd\",\"name\":\"order-info_name__AKC9Z\",\"date\":\"order-info_date__3YH4v\",\"footer\":\"order-info_footer__2VeuG\",\"totalPrice\":\"order-info_totalPrice__1wp-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersStats\":\"orders-stats_ordersStats__3ITHt\",\"ordersBoard\":\"orders-stats_ordersBoard__37il2\",\"done\":\"orders-stats_done__11fr7\",\"ready\":\"orders-stats_ready__2-nBi\",\"ordersList\":\"orders-stats_ordersList__1Tfex\",\"completedNumber\":\"orders-stats_completedNumber__-BGDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"profile-nav_nav__2gyI3\",\"active\":\"profile-nav_active__1TBx4\",\"link\":\"profile-nav_link__w_RXu\",\"caption\":\"profile-nav_caption__2IkGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"done\":\"order-status_done__1myxO\",\"created\":\"order-status_created__VZNOg\",\"pending\":\"order-status_pending__30G5t\",\"canceled\":\"order-status_canceled__2R-ZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ingredient-item_item__38ZA0\",\"price\":\"ingredient-item_price__1Fj29\",\"name\":\"ingredient-item_name__Ay04H\",\"image\":\"ingredient-item_image__kiYeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__RM8WX\",\"form\":\"profile_form__1yxrZ\",\"actions\":\"profile_actions__3_HFg\",\"cancel\":\"profile_cancel__JDjvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__2Vxf6\",\"orderNumber\":\"order-details_orderNumber__DSh5k\",\"textColor\":\"order-details_textColor__vwfg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"info_info__302fd\",\"price\":\"info_price__9ZEtI\",\"disabledButton\":\"info_disabledButton__2tKy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__3hh9x\",\"container\":\"home_container__21QWL\",\"wrapper\":\"home_wrapper__3g3VD\",\"form\":\"home_form__FsYR-\",\"heading\":\"home_heading__3mYtc\",\"actions\":\"home_actions__c5PEE\",\"link\":\"home_link__cEK_O\",\"ingredientDetails\":\"home_ingredientDetails__3i3wV\",\"orders\":\"home_orders__3GabL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"header\":\"modal_header__2iX3r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__3v9ma\",\"nutritions\":\"ingredient-details_nutritions__23hSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-info_container__17j_4\",\"header\":\"order-info_header__3ER2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"app-header_appHeader__nIqlo\",\"content\":\"app-header_content__KCd-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"nav-element_element__3MFca\",\"active\":\"nav-element_active__2SO4Q\"};"],"sourceRoot":""}